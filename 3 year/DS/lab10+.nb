(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53074,       1223]
NotebookOptionsPosition[     51765,       1197]
NotebookOutlinePosition[     52122,       1213]
CellTagsIndexPosition[     52079,       1210]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<lab10`\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"in", "=", 
    RowBox[{"StringJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<Tests/inputdop.txt\>\""}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inFileName", "=", 
   RowBox[{"FileStream", "[", "in", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertex", "=", 
   RowBox[{"ReadVertex", "[", "inFileName", "]"}]}], " ", ";"}], "\n", 
 RowBox[{
  RowBox[{"edge", "=", 
   RowBox[{"ReadEdge", "[", "inFileName", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"ReadEdges", "[", 
    RowBox[{"inFileName", ",", "edge"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"listInput", "=", 
    RowBox[{"ReadBi", "[", "inFileName", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertexList", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "vertex"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edgesList", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"edges", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1."}], "]"}], "]"}], "\[DirectedEdge]", 
      RowBox[{"edges", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2."}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "edge"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"array", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"0", "&"}], ",", "vertex"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "vertex"}], ",", 
     RowBox[{"i", "++"}], ",", 
     RowBox[{
      RowBox[{"array", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "=", 
      RowBox[{
       RowBox[{"ToExpression", "[", 
        RowBox[{"StringSplit", "[", 
         RowBox[{
          RowBox[{"listInput", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
           "\"\<b\>\"", ",", "\"\<_\>\"", ",", "\"\</*\>\"", ",", 
            "\"\<*/\>\""}], "}"}]}], "]"}], "]"}], "[", 
       RowBox[{"[", "2.", "]"}], "]"}]}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"graph", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"vertexList", ",", "edgesList", ",", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"GraphLayout", "\[Rule]", "\"\<CircularEmbedding\>\""}], ",", 
       " ", 
       RowBox[{"VertexSize", "\[Rule]", "0.3"}], ",", " ", 
       RowBox[{"VertexLabels", "\[Rule]", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<Name\>\"", ",", " ", "Center"}], "]"}]}], ",", " ", 
       RowBox[{"VertexLabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Bold", ",", "Italic", ",", "20"}], "]"}]}], ",", 
       RowBox[{"EdgeShapeFunction", "\[Rule]", 
        RowBox[{"GraphElementData", "[", 
         RowBox[{"\"\<Arrow\>\"", ",", 
          RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", "0.05"}]}], "]"}]}]}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"var1", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equations", "=", " ", 
   RowBox[{"SystemOfEquations", "[", 
    RowBox[{"edgesList", ",", "vertexList", ",", "array", ",", "vertex"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var2", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gen", "=", "0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"0", "&"}], ",", "edge"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vars", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", "edgesList"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pred", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "vertex"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"depth", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "vertex"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dir", "=", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", "vertex"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listUt", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dinastVertex", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"prev", "=", "root"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BuildSpanningTreeForGraph", "[", 
    RowBox[{"g_", ",", "root_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"DepthFirstScan", "[", 
       RowBox[{
        RowBox[{"UndirectedGraph", "[", "g", "]"}], ",", "root", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<FrontierEdge\>\"", "->", 
           RowBox[{"Function", "[", 
            RowBox[{"e", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"AppendTo", "[", 
                RowBox[{"s", ",", 
                 RowBox[{
                  RowBox[{"e", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[DirectedEdge]", 
                  RowBox[{"e", "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", 
               RowBox[{
                RowBox[{"pred", "[", 
                 RowBox[{"[", 
                  RowBox[{"e", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
                RowBox[{"e", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"depth", "[", 
                 RowBox[{"[", 
                  RowBox[{"e", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
                RowBox[{"1", "+", 
                 RowBox[{"depth", "[", 
                  RowBox[{"[", 
                   RowBox[{"e", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}]}]}], 
              "}"}]}], "]"}]}], ",", 
          RowBox[{"\"\<PrevisitVertex\>\"", "\[Rule]", 
           RowBox[{"Function", "[", 
            RowBox[{"u", ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"dinastVertex", ",", "u"}], "]"}]}], "]"}]}]}], "}"}]}],
        "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"k", "\[LessEqual]", 
         RowBox[{"Length", "[", "s", "]"}]}], ",", 
        RowBox[{"k", "++"}], ",", 
        RowBox[{
         RowBox[{"arc", "=", 
          RowBox[{"s", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"MemberQ", "[", 
            RowBox[{"edgesList", ",", "arc"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"dir", "[", 
               RowBox[{"[", 
                RowBox[{"arc", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", "1"}], 
             ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"listUt", ",", "arc"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"dir", "[", 
               RowBox[{"[", 
                RowBox[{"arc", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "=", 
              RowBox[{"-", "1"}]}], ";", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"listUt", ",", 
               RowBox[{"Reverse", "[", "arc", "]"}]}], "]"}]}], "}"}]}], 
          "]"}], ";"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "s", "]"}], ";"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"root", "=", "5"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"1", ",", "3"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DFS", "=", 
   RowBox[{"BuildSpanningTreeForGraph", "[", 
    RowBox[{"graph", ",", "root"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listUn", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"edgesList", ",", "listUt"}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var3", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gen", "=", 
    RowBox[{"gen", "+", "finish"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"treeEdges", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "edge"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", 
        RowBox[{"Length", "[", "DFS", "]"}]}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{
             RowBox[{"edgesList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"edgesList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}], "\[Equal]", 
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{
             RowBox[{"DFS", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"DFS", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"treeEdges", ",", 
            RowBox[{"edgesList", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{
             RowBox[{"edgesList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"edgesList", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], "\[Equal]", 
           RowBox[{"UndirectedEdge", "[", 
            RowBox[{
             RowBox[{"DFS", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"DFS", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"treeEdges", ",", 
            RowBox[{"edgesList", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result", "=", 
    RowBox[{"EquationsBalance", "[", 
     RowBox[{
     "array", ",", "pred", ",", "dinastVertex", ",", "dir", ",", "edgesList", 
      ",", "treeEdges"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{"equations", " ", "/.", " ", "result"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gen", "=", 
   RowBox[{"gen", "+", "finish"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"var4", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rules", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Tau]Function", "[", 
    RowBox[{"\[Tau]_", ",", "pos_"}], "]"}], ":=", 
   RowBox[{"(", "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dir", "[", 
        RowBox[{"[", "\[Tau]", "]"}], "]"}], " ", "==", "1"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"rules", ",", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"pos", ",", 
            RowBox[{"Position", "[", 
             RowBox[{"edgesList", ",", 
              RowBox[{
               RowBox[{"pred", "[", 
                RowBox[{"[", "\[Tau]", "]"}], "]"}], "\[DirectedEdge]", 
               "\[Tau]"}]}], "]"}]}], "}"}], "]"}], "->", "1"}]}], "]"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"rules", ",", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"pos", ",", 
            RowBox[{"Position", "[", 
             RowBox[{"edgesList", ",", 
              RowBox[{"\[Tau]", " ", "\[DirectedEdge]", 
               RowBox[{"pred", "[", 
                RowBox[{"[", "\[Tau]", "]"}], "]"}]}]}], "]"}]}], "}"}], 
          "]"}], "->", 
         RowBox[{"-", "1"}]}]}], "]"}]}], "]"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]Function", "[", 
    RowBox[{"\[Rho]_", ",", "pos_"}], "]"}], ":=", 
   RowBox[{"(", "\n", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dir", "[", 
        RowBox[{"[", "\[Rho]", "]"}], "]"}], " ", "==", " ", "1"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"rules", ",", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"pos", ",", 
            RowBox[{"Position", "[", 
             RowBox[{"edgesList", ",", 
              RowBox[{
               RowBox[{"pred", "[", 
                RowBox[{"[", "\[Rho]", "]"}], "]"}], "\[DirectedEdge]", 
               "\[Rho]"}]}], "]"}]}], "}"}], "]"}], "->", 
         RowBox[{"-", "1"}]}]}], "]"}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"rules", ",", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"{", 
           RowBox[{"pos", ",", 
            RowBox[{"Position", "[", 
             RowBox[{"edgesList", ",", 
              RowBox[{"\[Rho]", "\[DirectedEdge]", 
               RowBox[{"pred", "[", 
                RowBox[{"[", "\[Rho]", "]"}], "]"}]}]}], "]"}]}], "}"}], 
          "]"}], "->", "1"}]}], "]"}]}], "]"}], ")"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"characteristic", "[", "edge_", "]"}], ":=", 
   RowBox[{"(", "\n", 
    RowBox[{
     RowBox[{"\[Tau]", "=", 
      RowBox[{"Part", "[", 
       RowBox[{"edge", ",", "1"}], "]"}]}], ";", 
     RowBox[{"\[Rho]", "=", 
      RowBox[{"Part", "[", 
       RowBox[{"edge", ",", "2"}], "]"}]}], ";", "\n", 
     RowBox[{"position", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"listUn", ",", "edge"}], "]"}]}], ";", "\n", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"rules", ",", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"position", ",", 
           RowBox[{"Position", "[", 
            RowBox[{"edgesList", ",", "edge"}], "]"}]}], "}"}], "]"}], "->", 
        "1"}]}], "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"depth", "[", 
         RowBox[{"[", "\[Tau]", "]"}], "]"}], ">", 
        RowBox[{"depth", "[", 
         RowBox[{"[", "\[Rho]", "]"}], "]"}]}], ",", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"depth", "[", 
           RowBox[{"[", "\[Tau]", "]"}], "]"}], "!=", 
          RowBox[{"depth", "[", 
           RowBox[{"[", "\[Rho]", "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"\[Tau]Function", "[", 
           RowBox[{"\[Tau]", ",", "position"}], "]"}], ";", 
          RowBox[{"\[Tau]", "=", 
           RowBox[{"pred", "[", 
            RowBox[{"[", "\[Tau]", "]"}], "]"}]}]}]}], "]"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"depth", "[", 
           RowBox[{"[", "\[Tau]", "]"}], "]"}], "<", 
          RowBox[{"depth", "[", 
           RowBox[{"[", "\[Rho]", "]"}], "]"}]}], ",", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"depth", "[", 
             RowBox[{"[", "\[Tau]", "]"}], "]"}], "!=", 
            RowBox[{"depth", "[", 
             RowBox[{"[", "\[Rho]", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"\[Rho]Function", "[", 
             RowBox[{"\[Rho]", ",", "position"}], "]"}], ";", 
            RowBox[{"\[Rho]", "=", 
             RowBox[{"pred", "[", 
              RowBox[{"[", "\[Rho]", "]"}], "]"}]}]}]}], "]"}]}], "]"}]}], 
      "]"}], ";", "\n", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"depth", "[", 
         RowBox[{"[", "\[Tau]", "]"}], "]"}], "==", 
        RowBox[{"depth", "[", 
         RowBox[{"[", "\[Rho]", "]"}], "]"}]}], ",", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"\[Tau]", "!=", "\[Rho]"}], ",", 
         RowBox[{
          RowBox[{"\[Tau]Function", "[", 
           RowBox[{"\[Tau]", ",", "position"}], "]"}], ";", 
          RowBox[{"\[Tau]", "=", 
           RowBox[{"pred", "[", 
            RowBox[{"[", "\[Tau]", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"\[Rho]Function", "[", 
           RowBox[{"\[Rho]", ",", "position"}], "]"}], ";", 
          RowBox[{"\[Rho]", "=", 
           RowBox[{"pred", "[", 
            RowBox[{"[", "\[Rho]", "]"}], "]"}]}]}]}], "]"}]}], "]"}], ";"}], 
    "\n", "\n", ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"characteristic", "/@", "listUn"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", 
   RowBox[{"SparseArray", "[", 
    RowBox[{"rules", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Length", "[", "listUn", "]"}], ",", 
       RowBox[{"Length", "[", "edgesList", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var6", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gen", "=", 
    RowBox[{"gen", "+", "finish"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"indepVars", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Subscript", "[", 
      RowBox[{"x", ",", "#"}], "]"}], "&"}], "/@", "listUn"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"general", "=", 
   RowBox[{"ParallelMap", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"generalFunction", "[", 
       RowBox[{
       "#", ",", "indepVars", ",", "\[Delta]", ",", "listUn", ",", "result", 
        ",", "edgesList"}], "]"}], "&"}], ",", 
     RowBox[{"Range", "[", "edge", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gen", "=", 
   RowBox[{"gen", "+", "finish"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"var5", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"TimeUsed", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"equations", " ", "\[Equal]", "array"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"vars", "[", 
       RowBox[{"[", "#", "]"}], "]"}], "->", 
      RowBox[{"general", "[", 
       RowBox[{"[", "#", "]"}], "]"}]}], "&"}], "/@", 
    RowBox[{"Array", "[", 
     RowBox[{
      RowBox[{"#", "&"}], ",", "edge"}], "]"}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"finish", "=", 
  RowBox[{
   RowBox[{"TimeUsed", "[", "]"}], " ", "-", 
   "start"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var7", "=", "finish"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"var8", "=", "gen"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "var1", ",", "var2", ",", "var3", ",", "var4", ",", "var5", ",", "var6", 
    ",", "var7", ",", "var8"}], "}"}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.768140949433332*^9, 3.768140953343542*^9}, {
  3.7681410230512733`*^9, 3.768141023826301*^9}, {3.768141495572913*^9, 
  3.768141505666641*^9}, {3.768141610844411*^9, 3.768141611362504*^9}, {
  3.768141706547206*^9, 3.768141731923966*^9}, {3.7681418293602953`*^9, 
  3.768141861724243*^9}, {3.768141953581565*^9, 3.768141962955716*^9}, {
  3.7681420668884897`*^9, 3.768142118542614*^9}, {3.768142154812722*^9, 
  3.768142154899435*^9}, {3.768142428909083*^9, 3.768142431521813*^9}, {
  3.768142648195359*^9, 3.768142648498646*^9}, {3.768193321413498*^9, 
  3.76819332196574*^9}, {3.76819337629876*^9, 3.768193377758882*^9}},
 CellLabel->"",ExpressionUUID->"f8545097-2368-494a-9381-7d5237a0abd0"],

Cell[BoxData["0.04547699999999999`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768142650792327*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"825fd823-1b8c-487a-acc4-3863c427d24d"],

Cell[BoxData["0.43447199999999997`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768142651226684*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"773a5220-1832-482b-ab62-fbac4d3a5b75"],

Cell[BoxData["0.2554590000000001`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768142651542736*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"e8302208-4e4a-4ca3-8946-cae32b9aa7bc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
   ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
   "True", ",", "True", ",", "True", ",", "True", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.7681426750228653`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"7a81bf02-374e-45ae-9f20-516a90561f5a"],

Cell[BoxData["20.34383`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768142675030491*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"f5e73427-94a7-4693-a614-45e52e560fc9"],

Cell[BoxData["14232.097548`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768157293977828*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"29cde841-cba8-4a5e-902b-235bfd03b211"],

Cell[BoxData["161.24989599999935`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.7681574559972563`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"0bc971af-1211-4f7b-b754-c0689ab9b92b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", 
     ",", "True", ",", "True", ",", "True", ",", "True", ",", "True", ",", 
     "True", ",", "True", ",", "True", ",", "True", ",", "True"}], "}"}], 
   "\[Equal]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "6"}], ",", "7", ",", "4", ",", "5", ",", 
     RowBox[{"-", "1"}], ",", "4", ",", "10", ",", 
     RowBox[{"-", "18"}], ",", "10", ",", "8", ",", "10", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "24"}], ",", 
     RowBox[{"-", "4"}], ",", "4", ",", "5", ",", "5", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "8"}], ",", "9", ",", "9", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "6"}], ",", "6", ",", "18", ",", "1", ",", "5", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "10"}], ",", "6", ",", 
     RowBox[{"-", "3"}], ",", "1", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "10"}], ",", "21", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "6"}], ",", "0", ",", "8", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "5"}], ",", "7", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", "5", ",", "0", ",", "2", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "5"}], ",", "12", ",", 
     RowBox[{"-", "8"}], ",", "6", ",", 
     RowBox[{"-", "9"}], ",", "8", ",", "3", ",", "10", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "5"}], ",", "3", ",", "1", ",", "1", ",", 
     RowBox[{"-", "3"}], ",", "10", ",", "9", ",", 
     RowBox[{"-", "17"}], ",", "0", ",", 
     RowBox[{"-", "7"}], ",", "10", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "0", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "1"}], ",", "17", ",", "1", ",", 
     RowBox[{"-", "5"}], ",", "6", ",", 
     RowBox[{"-", "5"}], ",", "3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "6"}], ",", "20", ",", "4", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", "10", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "1"}], ",", "9", ",", 
     RowBox[{"-", "8"}], ",", "3", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}], ",", "3", ",", 
     RowBox[{"-", "10"}], ",", "12", ",", "6", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "4"}], ",", "14", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "7"}], ",", "10", ",", 
     RowBox[{"-", "7"}], ",", "7", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}], ",", "10", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "8"}], ",", "9", ",", "3", ",", "1", ",", 
     RowBox[{"-", "5"}], ",", "1", ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "3"}], ",", "14", ",", 
     RowBox[{"-", "9"}], ",", "10", ",", "1", ",", "5", ",", 
     RowBox[{"-", "7"}], ",", "10", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "10", ",", "8", ",", "6", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "16"}], ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5"}], ",", "9", ",", "7", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "6"}], ",", "7", ",", "14", ",", 
     RowBox[{"-", "1"}], ",", "7", ",", "0", ",", "5", ",", 
     RowBox[{"-", "11"}], ",", "2", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "2"}], ",", "1", ",", "7", ",", "1", ",", 
     RowBox[{"-", "3"}], ",", "8", ",", "4", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "10"}], ",", "3", ",", "14", ",", "7", ",", "4", ",", "3", 
     ",", "0", ",", 
     RowBox[{"-", "14"}], ",", "5", ",", "8", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "3"}], ",", "3", ",", "0", ",", "3", ",", 
     RowBox[{"-", "7"}], ",", "3", ",", 
     RowBox[{"-", "10"}], ",", "1", ",", "13", ",", 
     RowBox[{"-", "7"}], ",", "0", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "5"}], ",", "20", ",", 
     RowBox[{"-", "9"}], ",", "0", ",", "2", ",", "4", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "1", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "2"}], ",", "4", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "7"}], ",", "2", ",", "5", ",", "8", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "9", ",", "2", ",", 
     RowBox[{"-", "8"}], ",", "7", ",", "3", ",", "3", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "12"}], ",", "5", ",", 
     RowBox[{"-", "4"}], ",", "4", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "2"}], ",", "6", ",", 
     RowBox[{"-", "5"}], ",", "8", ",", 
     RowBox[{"-", "10"}], ",", "1", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "5"}], ",", "10", ",", "3", ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "9"}], ",", "7", ",", 
     RowBox[{"-", "4"}], ",", "0", ",", "6", ",", "10", ",", 
     RowBox[{"-", "5"}], ",", "10", ",", 
     RowBox[{"-", "6"}], ",", 
     RowBox[{"-", "9"}], ",", "4", ",", "7", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "6"}], ",", "6", ",", "0", ",", "4", ",", "10", ",", 
     RowBox[{"-", "6"}], ",", "8", ",", "8", ",", 
     RowBox[{"-", "20"}], ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "10"}], ",", "1", ",", "10", ",", "2", ",", "5", ",", "8", 
     ",", "0", ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "8"}], ",", "8", ",", 
     RowBox[{"-", "7"}], ",", "9", ",", "5", ",", 
     RowBox[{"-", "15"}], ",", "4", ",", 
     RowBox[{"-", "6"}], ",", "7", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}], ",", "7", ",", 
     RowBox[{"-", "2"}], ",", "5", ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "5"}], ",", "4", ",", "19", ",", 
     RowBox[{"-", "10"}], ",", "10", ",", "5", ",", "4", ",", 
     RowBox[{"-", "9"}], ",", "1", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "8"}], ",", "2", ",", "14", ",", "1", ",", 
     RowBox[{"-", "9"}], ",", "3", ",", "10", ",", 
     RowBox[{"-", "5"}], ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "6", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "4"}], ",", "7", ",", 
     RowBox[{"-", "2"}], ",", "9", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "5"}], ",", "8", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "8"}], ",", "7", ",", 
     RowBox[{"-", "10"}], ",", "0", ",", "11", ",", "10", ",", "3", ",", "10",
      ",", "4", ",", 
     RowBox[{"-", "27"}], ",", "10", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "3"}], ",", "7", ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "9"}], ",", "1", ",", "0", ",", 
     RowBox[{"-", "7"}], ",", "15", ",", "2", ",", 
     RowBox[{"-", "3"}], ",", 
     RowBox[{"-", "10"}], ",", 
     RowBox[{"-", "6"}], ",", "17", ",", 
     RowBox[{"-", "1"}], ",", "2", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "9"}], ",", "15", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "3"}], ",", "5", ",", "10", ",", 
     RowBox[{"-", "3"}], ",", "9", ",", 
     RowBox[{"-", "9"}], ",", "5", ",", "10", ",", 
     RowBox[{"-", "15"}], ",", 
     RowBox[{"-", "1"}], ",", "4", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}], ",", "2", ",", "4", ",", "10", ",", 
     RowBox[{"-", "5"}], ",", "6", ",", 
     RowBox[{"-", "15"}], ",", "1", ",", "7", ",", "3", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "9"}], ",", "8", ",", "6", ",", "5", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "17"}], ",", "8", ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "3"}], ",", "12", ",", 
     RowBox[{"-", "6"}], ",", "4", ",", "5", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "1"}], ",", "9", ",", 
     RowBox[{"-", "6"}], ",", "2", ",", "5", ",", 
     RowBox[{"-", "10"}], ",", "6", ",", "1", ",", 
     RowBox[{"-", "5"}], ",", "5", ",", 
     RowBox[{"-", "7"}], ",", "10", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "9"}], ",", "4", ",", 
     RowBox[{"-", "10"}], ",", "9", ",", 
     RowBox[{"-", "6"}], ",", "8", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "6"}], ",", "4", ",", "3", ",", "0", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "9"}], ",", "10", ",", "11", ",", "4", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", 
     RowBox[{"-", "6"}], ",", "8", ",", "5", ",", "1", ",", "8", ",", 
     RowBox[{"-", "22"}], ",", 
     RowBox[{"-", "1"}], ",", "10", ",", "3", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "8"}], ",", "9", ",", "5", ",", "4", ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "1"}], ",", "6", ",", "1", ",", "2", ",", "9", ",", "7", 
     ",", 
     RowBox[{"-", "6"}], ",", "10", ",", 
     RowBox[{"-", "20"}], ",", "2", ",", "2", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "6"}], ",", "9", ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "4"}], ",", "9", ",", 
     RowBox[{"-", "9"}], ",", "5", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "7"}], ",", "10", ",", "8", ",", 
     RowBox[{"-", "4"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "9"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "10"}], ",", "36", ",", "4", ",", 
     RowBox[{"-", "10"}], ",", "9", ",", 
     RowBox[{"-", "6"}], ",", "3", ",", "4", ",", "3", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "8"}], ",", "8", ",", "0", ",", 
     RowBox[{"-", "5"}], ",", 
     RowBox[{"-", "8"}], ",", 
     RowBox[{"-", "4"}], ",", "17", ",", 
     RowBox[{"-", "3"}], ",", "8", ",", 
     RowBox[{"-", "4"}], ",", "6", ",", 
     RowBox[{"-", "7"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768157460385131*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"b5f79313-1371-41ce-90dd-a77a5edfcf1a"],

Cell[BoxData["4.381720999999743`"], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.768157460392655*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"d456b70f-8644-481a-a477-49200e8e2342"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"0.04547699999999999`"},
     {"0.43447199999999997`"},
     {"0.2554590000000001`"},
     {"20.34383`"},
     {"161.24989599999935`"},
     {"14232.097548`"},
     {"4.381720999999743`"},
     {"14413.946732999999`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.768141455861724*^9, {3.7681415002609158`*^9, 3.768141514350832*^9}, 
   3.768141614821721*^9, 3.7681419548429003`*^9, 3.76814231423059*^9, 
   3.768142432527508*^9, 3.7681574603971663`*^9},
 CellLabel->
  "Out[68]//TableForm=",ExpressionUUID->"8a1c2ad0-0e0f-4888-b1e0-\
4b1d1e6be44f"]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{113, Automatic}, {Automatic, 15}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 22714, 632, 3443, "Input",ExpressionUUID->"f8545097-2368-494a-9381-7d5237a0abd0"],
Cell[23297, 656, 338, 5, 34, "Output",ExpressionUUID->"825fd823-1b8c-487a-acc4-3863c427d24d"],
Cell[23638, 663, 338, 5, 34, "Output",ExpressionUUID->"773a5220-1832-482b-ab62-fbac4d3a5b75"],
Cell[23979, 670, 337, 5, 34, "Output",ExpressionUUID->"e8302208-4e4a-4ca3-8946-cae32b9aa7bc"],
Cell[24319, 677, 7212, 99, 455, "Output",ExpressionUUID->"7a81bf02-374e-45ae-9f20-516a90561f5a"],
Cell[31534, 778, 327, 5, 34, "Output",ExpressionUUID->"f5e73427-94a7-4693-a614-45e52e560fc9"],
Cell[31864, 785, 331, 5, 34, "Output",ExpressionUUID->"29cde841-cba8-4a5e-902b-235bfd03b211"],
Cell[32198, 792, 339, 5, 34, "Output",ExpressionUUID->"0bc971af-1211-4f7b-b754-c0689ab9b92b"],
Cell[32540, 799, 17799, 355, 728, "Output",ExpressionUUID->"b5f79313-1371-41ce-90dd-a77a5edfcf1a"],
Cell[50342, 1156, 336, 5, 34, "Output",ExpressionUUID->"d456b70f-8644-481a-a477-49200e8e2342"],
Cell[50681, 1163, 1068, 31, 162, "Output",ExpressionUUID->"8a1c2ad0-0e0f-4888-b1e0-4b1d1e6be44f"]
}, Open  ]]
}
]
*)

